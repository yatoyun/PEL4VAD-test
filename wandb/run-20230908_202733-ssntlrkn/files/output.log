
8000 8100 2900
[2023-09-08 20:27:35,621][main.py][line:165][INFO] total params:7.5400M
[2023-09-08 20:27:35,621][main.py][line:168][INFO] Training Mode
[2023-09-08 20:27:35,622][main.py][line:78][INFO] Model:XModel(
  (self_attention): XEncoder(
    (self_attn): TCA(
      (q): Linear(in_features=1024, out_features=128, bias=True)
      (k): Linear(in_features=1024, out_features=128, bias=True)
      (v): Linear(in_features=1024, out_features=128, bias=True)
      (o): Linear(in_features=128, out_features=1024, bias=True)
      (act): Softmax(dim=-1)
    )
    (linear1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,))
    (linear2): Conv1d(512, 300, kernel_size=(1,), stride=(1,))
    (dropout1): Dropout(p=0, inplace=False)
    (dropout2): Dropout(p=0.1, inplace=False)
    (norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (loc_adj): DistanceAdj()
    (DR_DMU): WSAD(
      (embedding): Temporal(
        (conv_1): Sequential(
          (0): Conv1d(1024, 512, kernel_size=(3,), stride=(1,), padding=(1,))
          (1): ReLU()
        )
      )
      (triplet): TripletMarginLoss()
      (Amemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (Nmemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (selfatt): Transformer(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=2048, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=1024, out_features=512, bias=True)
                  (1): Dropout(p=0.5, inplace=False)
                )
              )
            )
            (1): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.5, inplace=False)
                  (3): Linear(in_features=512, out_features=512, bias=True)
                  (4): Dropout(p=0.5, inplace=False)
                )
              )
            )
          )
        )
      )
      (encoder_mu): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (encoder_var): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (relu): ReLU()
    )
  )
  (classifier): Conv1d(300, 1, kernel_size=(9,), stride=(1,))
)
[2023-09-08 20:27:35,622][main.py][line:79][INFO] Optimizer:Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0005
    maximize: False
    weight_decay: 0
Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 5e-05
)
[2023-09-08 20:27:43,682][main.py][line:82][INFO] Random initialize AUCAUC:0.5802 Anomaly AUC:0.50318
[2023-09-08 20:28:01,949][main.py][line:106][INFO] [Epoch:1/100]: lr:0.00050 | loss1:0.3961 loss2:1.1420 loss3:0.3711 | AUC:0.7735 Anomaly AUC:0.6706
[2023-09-08 20:28:20,110][main.py][line:106][INFO] [Epoch:2/100]: lr:0.00050 | loss1:0.0150 loss2:0.7484 loss3:0.2829 | AUC:0.7619 Anomaly AUC:0.6699
[2023-09-08 20:28:38,540][main.py][line:106][INFO] [Epoch:3/100]: lr:0.00050 | loss1:0.0078 loss2:0.6094 loss3:0.2113 | AUC:0.8009 Anomaly AUC:0.6693
[2023-09-08 20:28:56,977][main.py][line:106][INFO] [Epoch:4/100]: lr:0.00050 | loss1:0.0103 loss2:0.5578 loss3:0.1770 | AUC:0.7929 Anomaly AUC:0.6622
[2023-09-08 20:29:15,579][main.py][line:106][INFO] [Epoch:5/100]: lr:0.00050 | loss1:0.0054 loss2:0.4393 loss3:0.1274 | AUC:0.7973 Anomaly AUC:0.6697
[2023-09-08 20:29:34,237][main.py][line:106][INFO] [Epoch:6/100]: lr:0.00050 | loss1:0.0033 loss2:0.3517 loss3:0.0995 | AUC:0.8228 Anomaly AUC:0.6750
[2023-09-08 20:29:52,847][main.py][line:106][INFO] [Epoch:7/100]: lr:0.00050 | loss1:0.0064 loss2:0.2917 loss3:0.0872 | AUC:0.8030 Anomaly AUC:0.6580
[2023-09-08 20:30:11,559][main.py][line:106][INFO] [Epoch:8/100]: lr:0.00050 | loss1:0.0039 loss2:0.2192 loss3:0.0687 | AUC:0.8157 Anomaly AUC:0.6538
[2023-09-08 20:30:30,479][main.py][line:106][INFO] [Epoch:9/100]: lr:0.00050 | loss1:0.0022 loss2:0.1515 loss3:0.0494 | AUC:0.8241 Anomaly AUC:0.6680
[2023-09-08 20:30:49,151][main.py][line:106][INFO] [Epoch:10/100]: lr:0.00050 | loss1:0.0024 loss2:0.1116 loss3:0.0393 | AUC:0.8145 Anomaly AUC:0.6625
[2023-09-08 20:31:07,863][main.py][line:106][INFO] [Epoch:11/100]: lr:0.00050 | loss1:0.0074 loss2:0.1034 loss3:0.0484 | AUC:0.7815 Anomaly AUC:0.6730
[2023-09-08 20:31:26,795][main.py][line:106][INFO] [Epoch:12/100]: lr:0.00050 | loss1:0.0040 loss2:0.0828 loss3:0.0450 | AUC:0.8217 Anomaly AUC:0.6668
[2023-09-08 20:31:45,535][main.py][line:106][INFO] [Epoch:13/100]: lr:0.00050 | loss1:0.0016 loss2:0.0510 loss3:0.0276 | AUC:0.8132 Anomaly AUC:0.6617
[2023-09-08 20:32:04,437][main.py][line:106][INFO] [Epoch:14/100]: lr:0.00050 | loss1:0.0016 loss2:0.0472 loss3:0.0287 | AUC:0.8205 Anomaly AUC:0.6585
[2023-09-08 20:32:23,304][main.py][line:106][INFO] [Epoch:15/100]: lr:0.00050 | loss1:0.0004 loss2:0.0306 loss3:0.0191 | AUC:0.8308 Anomaly AUC:0.6686
[2023-09-08 20:32:42,068][main.py][line:106][INFO] [Epoch:16/100]: lr:0.00050 | loss1:0.0063 loss2:0.0584 loss3:0.0316 | AUC:0.7132 Anomaly AUC:0.6007
[2023-09-08 20:33:00,876][main.py][line:106][INFO] [Epoch:17/100]: lr:0.00050 | loss1:0.0023 loss2:0.0502 loss3:0.0427 | AUC:0.8320 Anomaly AUC:0.6805
Traceback (most recent call last):
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 203, in <module>
    main(cfg)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 170, in main
    train(model, train_nloader, train_aloader, test_loader, gt, logger)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 90, in train
    loss1, loss2, cost = train_func(train_nloader, train_aloader, model, optimizer, criterion, criterion2, criterion3, logger_wandb, args.lamda, args.alpha)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/train.py", line 25, in train_func
    v_input = v_input.float().cuda(non_blocking=True)
KeyboardInterrupt