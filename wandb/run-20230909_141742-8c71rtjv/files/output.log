
8000 8100 2900
[2023-09-09 14:17:44,312][main.py][line:165][INFO] total params:7.5400M
[2023-09-09 14:17:44,313][main.py][line:168][INFO] Training Mode
[2023-09-09 14:17:44,313][main.py][line:78][INFO] Model:XModel(
  (self_attention): XEncoder(
    (self_attn): TCA(
      (q): Linear(in_features=1024, out_features=128, bias=True)
      (k): Linear(in_features=1024, out_features=128, bias=True)
      (v): Linear(in_features=1024, out_features=128, bias=True)
      (o): Linear(in_features=128, out_features=1024, bias=True)
      (act): Softmax(dim=-1)
    )
    (linear1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,))
    (linear2): Conv1d(512, 300, kernel_size=(1,), stride=(1,))
    (dropout1): Dropout(p=0.1, inplace=False)
    (dropout2): Dropout(p=0.1, inplace=False)
    (norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (loc_adj): DistanceAdj()
    (DR_DMU): WSAD(
      (embedding): Temporal(
        (conv_1): Sequential(
          (0): Conv1d(1024, 512, kernel_size=(3,), stride=(1,), padding=(1,))
          (1): ReLU()
        )
      )
      (triplet): TripletMarginLoss()
      (Amemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (Nmemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (selfatt): Transformer(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=2048, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=1024, out_features=512, bias=True)
                  (1): Dropout(p=0.5, inplace=False)
                )
              )
            )
            (1): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.5, inplace=False)
                  (3): Linear(in_features=512, out_features=512, bias=True)
                  (4): Dropout(p=0.5, inplace=False)
                )
              )
            )
          )
        )
      )
      (encoder_mu): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (encoder_var): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (relu): ReLU()
    )
  )
  (classifier): Conv1d(300, 1, kernel_size=(9,), stride=(1,))
  (dropout): Dropout(p=0.1, inplace=False)
)
[2023-09-09 14:17:44,313][main.py][line:79][INFO] Optimizer:Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0001
    lr: 0.0001
    maximize: False
    weight_decay: 5e-05
)
[2023-09-09 14:17:52,371][main.py][line:82][INFO] Random initialize AUCAUC:0.6179 Anomaly AUC:0.52117
[2023-09-09 14:18:10,771][main.py][line:106][INFO] [Epoch:1/100]: lr:0.00010 | loss1:0.4513 loss2:1.1467 loss3:0.3419 | AUC:0.8093 Anomaly AUC:0.6481
[2023-09-09 14:18:29,042][main.py][line:106][INFO] [Epoch:2/100]: lr:0.00010 | loss1:0.1860 loss2:0.8462 loss3:0.2046 | AUC:0.8261 Anomaly AUC:0.6898
[2023-09-09 14:18:47,648][main.py][line:106][INFO] [Epoch:3/100]: lr:0.00010 | loss1:0.0759 loss2:0.7514 loss3:0.1039 | AUC:0.8298 Anomaly AUC:0.6661
[2023-09-09 14:19:06,258][main.py][line:106][INFO] [Epoch:4/100]: lr:0.00010 | loss1:0.0405 loss2:0.6865 loss3:0.0475 | AUC:0.8449 Anomaly AUC:0.6880
[2023-09-09 14:19:25,101][main.py][line:106][INFO] [Epoch:5/100]: lr:0.00010 | loss1:0.0201 loss2:0.6301 loss3:0.0275 | AUC:0.8419 Anomaly AUC:0.6792
[2023-09-09 14:19:43,822][main.py][line:106][INFO] [Epoch:6/100]: lr:0.00010 | loss1:0.0276 loss2:0.5821 loss3:0.0205 | AUC:0.8352 Anomaly AUC:0.6688
[2023-09-09 14:20:02,626][main.py][line:106][INFO] [Epoch:7/100]: lr:0.00010 | loss1:0.0102 loss2:0.5277 loss3:0.0150 | AUC:0.8418 Anomaly AUC:0.6704
[2023-09-09 14:20:21,528][main.py][line:106][INFO] [Epoch:8/100]: lr:0.00010 | loss1:0.0080 loss2:0.4815 loss3:0.0121 | AUC:0.8279 Anomaly AUC:0.6621
[2023-09-09 14:20:40,505][main.py][line:106][INFO] [Epoch:9/100]: lr:0.00010 | loss1:0.0027 loss2:0.4334 loss3:0.0093 | AUC:0.8410 Anomaly AUC:0.6761
[2023-09-09 14:20:59,466][main.py][line:106][INFO] [Epoch:10/100]: lr:0.00010 | loss1:0.0020 loss2:0.3934 loss3:0.0071 | AUC:0.8407 Anomaly AUC:0.6786
[2023-09-09 14:21:18,287][main.py][line:106][INFO] [Epoch:11/100]: lr:0.00010 | loss1:0.0039 loss2:0.3608 loss3:0.0051 | AUC:0.8414 Anomaly AUC:0.6770
[2023-09-09 14:21:37,197][main.py][line:106][INFO] [Epoch:12/100]: lr:0.00010 | loss1:0.0021 loss2:0.3325 loss3:0.0027 | AUC:0.8428 Anomaly AUC:0.6754
[2023-09-09 14:21:56,177][main.py][line:106][INFO] [Epoch:13/100]: lr:0.00010 | loss1:0.0101 loss2:0.3154 loss3:0.0035 | AUC:0.8301 Anomaly AUC:0.6615
[2023-09-09 14:22:15,605][main.py][line:106][INFO] [Epoch:14/100]: lr:0.00010 | loss1:0.0310 loss2:0.3308 loss3:0.0064 | AUC:0.8462 Anomaly AUC:0.6733
Exception in thread Thread-49 (_pin_memory_loop):
Traceback (most recent call last):
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py", line 51, in _pin_memory_loop
    do_one_step()
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py", line 28, in do_one_step
    r = in_queue.get(timeout=MP_STATUS_CHECK_INTERVAL)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/multiprocessing/queues.py", line 122, in get
    return _ForkingPickler.loads(res)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/multiprocessing/reductions.py", line 307, in rebuild_storage_fd
    fd = df.detach()
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/multiprocessing/resource_sharer.py", line 57, in detach
    with _resource_sharer.get_connection(self._id) as conn:
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/multiprocessing/resource_sharer.py", line 86, in get_connection
    c = Client(address, authkey=process.current_process().authkey)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/multiprocessing/connection.py", line 502, in Client
    c = SocketClient(address)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/multiprocessing/connection.py", line 630, in SocketClient
    s.connect(address)
FileNotFoundError: [Errno 2] No such file or directory
Traceback (most recent call last):
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 203, in <module>
    main(cfg)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 170, in main
    train(model, train_nloader, train_aloader, test_loader, gt, logger)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 97, in train
    auc, ab_auc = test_func(test_loader, model, gt, cfg.dataset)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/test.py", line 37, in test_func
    logits, _ = model(v_input, seq_len)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/model.py", line 37, in forward
    x_e, x_v = self.self_attention(x, seq_len)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/modules.py", line 26, in forward
    mask = self.get_mask(self.win_size, x.shape[1], seq_len)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/modules.py", line 61, in get_mask
    m[j, min(max(j - w_len // 2 + k, 0), temporal_scale - 1)] = 1.
KeyboardInterrupt