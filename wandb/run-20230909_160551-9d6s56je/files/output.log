
8000 8100 2900
[2023-09-09 16:05:53,855][main.py][line:165][INFO] total params:7.5605M
[2023-09-09 16:05:53,855][main.py][line:168][INFO] Training Mode
[2023-09-09 16:05:53,856][main.py][line:78][INFO] Model:XModel(
  (self_attention): XEncoder(
    (self_attn): TCA(
      (q): Linear(in_features=1024, out_features=128, bias=True)
      (k): Linear(in_features=1024, out_features=128, bias=True)
      (v): Linear(in_features=1024, out_features=128, bias=True)
      (o): Linear(in_features=128, out_features=1024, bias=True)
      (act): Softmax(dim=-1)
    )
    (linear1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,))
    (linear2): Conv1d(512, 300, kernel_size=(1,), stride=(1,))
    (dropout1): Dropout(p=0.5, inplace=False)
    (dropout2): Dropout(p=0.5, inplace=False)
    (norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (loc_adj): DistanceAdj()
    (DR_DMU): WSAD(
      (embedding): Temporal(
        (conv_1): Sequential(
          (0): Conv1d(1024, 512, kernel_size=(3,), stride=(1,), padding=(1,))
          (1): ReLU()
        )
      )
      (triplet): TripletMarginLoss()
      (Amemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (Nmemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (selfatt): Transformer(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=2048, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=1024, out_features=512, bias=True)
                  (1): Dropout(p=0.5, inplace=False)
                )
              )
            )
            (1): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.5, inplace=False)
                  (3): Linear(in_features=512, out_features=512, bias=True)
                  (4): Dropout(p=0.5, inplace=False)
                )
              )
            )
          )
        )
      )
      (encoder_mu): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (encoder_var): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (relu): ReLU()
    )
  )
  (classifier): Conv1d(300, 1, kernel_size=(9,), stride=(1,))
  (dropout): Dropout(p=0.5, inplace=False)
)
[2023-09-09 16:05:53,856][main.py][line:79][INFO] Optimizer:Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0005
    lr: 0.0005
    maximize: False
    weight_decay: 5e-05
)
[2023-09-09 16:06:01,865][main.py][line:82][INFO] Random initialize AUCAUC:0.5550 Anomaly AUC:0.47816
[2023-09-09 16:06:20,186][main.py][line:106][INFO] [Epoch:1/100]: lr:0.00050 | loss1:1.5210 loss2:1.4032 loss3:0.3800 | AUC:0.7292 Anomaly AUC:0.5937
[2023-09-09 16:06:38,547][main.py][line:106][INFO] [Epoch:2/100]: lr:0.00050 | loss1:1.2166 loss2:1.3951 loss3:0.3255 | AUC:0.8011 Anomaly AUC:0.5859
[2023-09-09 16:06:57,256][main.py][line:106][INFO] [Epoch:3/100]: lr:0.00050 | loss1:0.8200 loss2:1.3077 loss3:0.1674 | AUC:0.8047 Anomaly AUC:0.5905
[2023-09-09 16:07:15,913][main.py][line:106][INFO] [Epoch:4/100]: lr:0.00050 | loss1:0.6520 loss2:1.2467 loss3:0.0903 | AUC:0.8120 Anomaly AUC:0.5902
[2023-09-09 16:07:34,757][main.py][line:106][INFO] [Epoch:5/100]: lr:0.00050 | loss1:0.5288 loss2:1.2274 loss3:0.0526 | AUC:0.8078 Anomaly AUC:0.5744
[2023-09-09 16:07:53,517][main.py][line:106][INFO] [Epoch:6/100]: lr:0.00050 | loss1:0.4390 loss2:1.2128 loss3:0.0367 | AUC:0.8116 Anomaly AUC:0.5899
[2023-09-09 16:08:12,494][main.py][line:106][INFO] [Epoch:7/100]: lr:0.00050 | loss1:0.4130 loss2:1.2086 loss3:0.0337 | AUC:0.8009 Anomaly AUC:0.5741
[2023-09-09 16:08:31,446][main.py][line:106][INFO] [Epoch:8/100]: lr:0.00050 | loss1:0.2966 loss2:1.1922 loss3:0.0222 | AUC:0.8060 Anomaly AUC:0.5786
[2023-09-09 16:08:50,317][main.py][line:106][INFO] [Epoch:9/100]: lr:0.00050 | loss1:0.2431 loss2:1.1839 loss3:0.0167 | AUC:0.7929 Anomaly AUC:0.5553
[2023-09-09 16:09:09,274][main.py][line:106][INFO] [Epoch:10/100]: lr:0.00050 | loss1:0.2133 loss2:1.1793 loss3:0.0138 | AUC:0.7827 Anomaly AUC:0.5543
Traceback (most recent call last):
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 203, in <module>
    main(cfg)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 170, in main
    train(model, train_nloader, train_aloader, test_loader, gt, logger)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 97, in train
    auc, ab_auc = test_func(test_loader, model, gt, cfg.dataset)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/test.py", line 37, in test_func
    logits, _ = model(v_input, seq_len)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/model.py", line 37, in forward
    x_e, x_v = self.self_attention(x, seq_len)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/modules.py", line 28, in forward
    x = x + self.self_attn(x, mask, adj)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/layers.py", line 61, in forward
    g_map = self.act(g_map)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/modules/activation.py", line 1482, in forward
    return F.softmax(input, self.dim, _stacklevel=5)
  File "/home/yukaneko/miniconda3/envs/detection/lib/python3.10/site-packages/torch/nn/functional.py", line 1843, in softmax
    ret = input.softmax(dim)
KeyboardInterrupt