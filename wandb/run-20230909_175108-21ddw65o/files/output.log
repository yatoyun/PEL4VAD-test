
8000 8100 2900
[2023-09-09 17:51:10,310][main.py][line:165][INFO] total params:9.1334M
[2023-09-09 17:51:10,310][main.py][line:168][INFO] Training Mode
[2023-09-09 17:51:10,311][main.py][line:78][INFO] Model:XModel(
  (self_attention): XEncoder(
    (self_attn): TCA(
      (q): Linear(in_features=1024, out_features=128, bias=True)
      (k): Linear(in_features=1024, out_features=128, bias=True)
      (v): Linear(in_features=1024, out_features=128, bias=True)
      (o): Linear(in_features=128, out_features=1024, bias=True)
      (act): Softmax(dim=-1)
    )
    (linear1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,))
    (linear2): Conv1d(512, 300, kernel_size=(1,), stride=(1,))
    (dropout1): Dropout(p=0.1, inplace=False)
    (dropout2): Dropout(p=0.1, inplace=False)
    (norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (loc_adj): DistanceAdj()
    (DR_DMU): WSAD(
      (embedding): Temporal(
        (conv_1): Sequential(
          (0): Conv1d(2048, 512, kernel_size=(3,), stride=(1,), padding=(1,))
          (1): ReLU()
        )
      )
      (triplet): TripletMarginLoss()
      (Amemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (Nmemory): Memory_Unit(
        (sig): Sigmoid()
      )
      (selfatt): Transformer(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=2048, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=1024, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
            )
            (1): PreNorm(
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=512, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
            )
          )
        )
      )
      (encoder_mu): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (encoder_var): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
      )
      (relu): ReLU()
    )
  )
  (classifier): Conv1d(300, 1, kernel_size=(9,), stride=(1,))
  (dropout): Dropout(p=0.1, inplace=False)
)
[2023-09-09 17:51:10,311][main.py][line:79][INFO] Optimizer:Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0001
    lr: 0.0001
    maximize: False
    weight_decay: 5e-05
)
[2023-09-09 17:51:18,515][main.py][line:82][INFO] Random initialize AUCAUC:0.3878 Anomaly AUC:0.43862
[2023-09-09 17:51:37,774][main.py][line:106][INFO] [Epoch:1/100]: lr:0.00010 | loss1:0.6650 loss2:1.2821 loss3:0.3872 | AUC:0.7959 Anomaly AUC:0.5782
[2023-09-09 17:51:56,762][main.py][line:106][INFO] [Epoch:2/100]: lr:0.00010 | loss1:0.1671 loss2:0.9477 loss3:0.3837 | AUC:0.6799 Anomaly AUC:0.5217
[2023-09-09 17:52:15,911][main.py][line:106][INFO] [Epoch:3/100]: lr:0.00010 | loss1:0.0542 loss2:0.8454 loss3:0.3209 | AUC:0.6809 Anomaly AUC:0.5218
[2023-09-09 17:52:35,221][main.py][line:106][INFO] [Epoch:4/100]: lr:0.00010 | loss1:0.0307 loss2:0.7709 loss3:0.2693 | AUC:0.6675 Anomaly AUC:0.5252
[2023-09-09 17:52:54,799][main.py][line:106][INFO] [Epoch:5/100]: lr:0.00010 | loss1:0.0540 loss2:0.7943 loss3:0.2791 | AUC:0.6564 Anomaly AUC:0.4979
[2023-09-09 17:53:14,361][main.py][line:106][INFO] [Epoch:6/100]: lr:0.00010 | loss1:0.0186 loss2:0.6825 loss3:0.2332 | AUC:0.7081 Anomaly AUC:0.5464
[2023-09-09 17:53:33,943][main.py][line:106][INFO] [Epoch:7/100]: lr:0.00010 | loss1:0.0182 loss2:0.6243 loss3:0.2002 | AUC:0.7076 Anomaly AUC:0.5492
[2023-09-09 17:53:53,569][main.py][line:106][INFO] [Epoch:8/100]: lr:0.00010 | loss1:0.0168 loss2:0.5802 loss3:0.1774 | AUC:0.7077 Anomaly AUC:0.5405
[2023-09-09 17:54:13,438][main.py][line:106][INFO] [Epoch:9/100]: lr:0.00010 | loss1:0.0151 loss2:0.5382 loss3:0.1563 | AUC:0.7733 Anomaly AUC:0.5587
[2023-09-09 17:54:33,072][main.py][line:106][INFO] [Epoch:10/100]: lr:0.00010 | loss1:0.0161 loss2:0.5049 loss3:0.1422 | AUC:0.6960 Anomaly AUC:0.5369
[2023-09-09 17:54:52,855][main.py][line:106][INFO] [Epoch:11/100]: lr:0.00010 | loss1:0.0143 loss2:0.4830 loss3:0.1258 | AUC:0.7383 Anomaly AUC:0.5485
[2023-09-09 17:55:12,566][main.py][line:106][INFO] [Epoch:12/100]: lr:0.00010 | loss1:0.0127 loss2:0.4438 loss3:0.1036 | AUC:0.7201 Anomaly AUC:0.5384
[2023-09-09 17:55:32,488][main.py][line:106][INFO] [Epoch:13/100]: lr:0.00010 | loss1:0.0154 loss2:0.4305 loss3:0.0992 | AUC:0.7881 Anomaly AUC:0.5571
[2023-09-09 17:55:52,304][main.py][line:106][INFO] [Epoch:14/100]: lr:0.00010 | loss1:0.0120 loss2:0.3981 loss3:0.0795 | AUC:0.7590 Anomaly AUC:0.5426
[2023-09-09 17:56:12,123][main.py][line:106][INFO] [Epoch:15/100]: lr:0.00010 | loss1:0.0119 loss2:0.3791 loss3:0.0727 | AUC:0.7502 Anomaly AUC:0.5375
[2023-09-09 17:56:31,909][main.py][line:106][INFO] [Epoch:16/100]: lr:0.00010 | loss1:0.0091 loss2:0.3443 loss3:0.0531 | AUC:0.7844 Anomaly AUC:0.5492
[2023-09-09 17:56:51,651][main.py][line:106][INFO] [Epoch:17/100]: lr:0.00010 | loss1:0.0102 loss2:0.3378 loss3:0.0521 | AUC:0.7394 Anomaly AUC:0.5388
Traceback (most recent call last):
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 203, in <module>
    main(cfg)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 170, in main
    train(model, train_nloader, train_aloader, test_loader, gt, logger)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/main.py", line 90, in train
    loss1, loss2, cost = train_func(train_nloader, train_aloader, model, optimizer, criterion, criterion2, criterion3, logger_wandb, args.lamda, args.alpha)
  File "/home/yukaneko/dev/AbnormalDetection/PEL4VAD/train.py", line 16, in train_func
    v_input = torch.cat((v_ninput, v_ainput), 0)
KeyboardInterrupt